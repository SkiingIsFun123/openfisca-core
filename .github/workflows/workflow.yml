name: OpenFisca Core

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    env:
      TERM: xterm-256color  # To colorize output of make tasks.
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
          restore-keys: | # in case of a cache miss (systematically unless the same commit is built repeatedly), the keys below will be used to restore dependencies from previous builds, and the cache will be stored at the end of the job, making up-to-date dependencies available for all jobs of the workflow; see more at https://docs.github.com/en/actions/advanced-guides/caching-dependencies-to-speed-up-workflows#example-using-the-cache-action
            build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
            build-${{ env.pythonLocation }}-
      - name: Build package
        run: make build
      - name: Cache release
        id: restore-release
        uses: actions/cache@v2
        with:
          path: dist
          key: release-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}

  test-core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    needs: [ build ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TERM: xterm-256color  # To colorize output of make tasks.
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Run openfisca-core tests
        run: make test-core
      - name: Submit coverage to Coveralls
        run: |
          pip install coveralls
          coveralls --service=github

  test-country-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    needs: [ build ]
    env:
      TERM: xterm-256color
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Run Country Template tests
        run: make test-country

  test-extension-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    needs: [ build ]
    env:
      TERM: xterm-256color
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Run Extension Template tests
        run: make test-extension

  check-numpy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    needs: [ build ]
    env:
      TERM: xterm-256color
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Check NumPy typing against latest 3 minor versions
        run: for i in {1..3}; do VERSION=$(${GITHUB_WORKSPACE}/.github/get-numpy-version.py prev) && pip install numpy==$VERSION && make check-types; done

  test-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:  # Patch version must be specified to avoid any cache confusion, since the cache key depends on the full Python version. If left unspecified, different patch versions could be allocated between jobs, and any such difference would lead to a cache not found error.
          - 3.7.13
          - 3.8.13
    needs: [ build ]
    env:
      TERM: xterm-256color
    steps:
      - uses: actions/checkout@v2
      - name: Checkout docs
        run: make test-doc-checkout branch=${GITHUB_REF#refs/heads/}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Cache docs
        id: restore-docs
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: docs-${{ env.pythonLocation }}-${{ hashFiles('doc/requirements.txt') }}--${{ github.sha }}
      - name: Install dependencies
        run: make test-doc-install
      - name: Run doc tests
        run: make test-doc-build

  lint-files:
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      TERM: xterm-256color
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.13
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Run linters
        run: make lint

  check-version:
    runs-on: ubuntu-latest
    needs: [ test-core, test-country-template, test-extension-template, check-numpy, test-docs, lint-files ] # Last job to run
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.13
      - name: Check version number has been properly updated
        run: "${GITHUB_WORKSPACE}/.github/is-version-number-acceptable.sh"

  # GitHub Actions does not have a halt job option, to stop from deploying if no functional changes were found.
  # We build a separate job to substitute the halt option.
  # The `deploy` job is dependent on the output of the `check-for-functional-changes`job.
  check-for-functional-changes:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # Only triggered for the `master` branch
    needs: [ check-version ]
    outputs:
      status: ${{ steps.stop-early.outputs.status }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.13
      - id: stop-early
        run: if "${GITHUB_WORKSPACE}/.github/has-functional-changes.sh" ; then echo "::set-output name=status::success" ; fi # The `check-for-functional-changes` job should always succeed regardless of the `has-functional-changes` script's exit code. Consequently, we do not use that exit code to trigger deploy, but rather a dedicated output variable `status`, to avoid a job failure if the exit code is different from 0. Conversely, if the job fails the entire workflow would be marked as `failed` which is disturbing for contributors.

  deploy:
    runs-on: ubuntu-latest
    needs: [ check-for-functional-changes ]
    if: needs.check-for-functional-changes.outputs.status == 'success'
    env:
      PYPI_USERNAME: openfisca-bot
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      CIRCLE_TOKEN: ${{ secrets.CIRCLECI_V1_OPENFISCADOC_TOKEN }} # Personal API token created in CircleCI to grant full read and write permissions
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.13
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: build-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Cache release
        id: restore-release
        uses: actions/cache@v2
        with:
          path: dist
          key: release-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ github.sha }}
      - name: Upload a Python package to PyPi
        run: twine upload dist/* --username $PYPI_USERNAME --password $PYPI_PASSWORD
      - name: Publish a git tag
        run: "${GITHUB_WORKSPACE}/.github/publish-git-tag.sh"
      - name: Update doc
        run: |
          curl -X POST --header "Content-Type: application/json" -d '{"branch":"master"}' https://circleci.com/api/v1.1/project/github/openfisca/openfisca-doc/build?circle-token=${{ secrets.CIRCLECI_V1_OPENFISCADOC_TOKEN }}
